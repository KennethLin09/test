# I - Import and Initialize
import pygame
pygame.init()
def statusSurface(drawColor, lineWidth):
    """Creates a Surface object for status text"""
    myFont = pygame.font.SysFont("Courier", 20)
    status_string = "color: %s, width: %d" % (drawColor, lineWidth)
    status = myFont.render(status_string, 1, (drawColor))
    return status

def main():
    '''This function defines the 'mainline logic' for our paint program.'''

    # D - Display configuration
    screen = pygame.display.set_mode((640, 480))
    pygame.display.set_caption("Paint: (w)hite, blac(k), (c)lear, (q)uit")

    # E - Entities
    background = pygame.Surface(screen.get_size())
    background.fill((255, 255, 255))

    # A - Action (broken into ALTER steps)

    # A - Assign values to key variables
    clock = pygame.time.Clock()
    keepGoing = True
    lineStart = (0, 0)
    drawColor = (0, 0, 0)
    lineWidth = 3

    # L - Loop
    while keepGoing:

        # T - Timer to set frame rate
        clock.tick(30)

        # E - Event handling
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                keepGoing = False
            elif event.type == pygame.MOUSEMOTION:
                lineEnd = pygame.mouse.get_pos()
                # Check if a left mouse button is down
                if pygame.mouse.get_pressed() == (1, 0, 0):
                    pygame.draw.line(background, drawColor, lineStart, lineEnd, lineWidth)
                    lineStart = lineEnd
            elif event.type == pygame.KEYDOWN:
                if event.key == pygame.K_q:
                    # Quit
                    keepGoing = False
                elif event.key == pygame.K_c:
                    # Clear screen
                    background.fill((255, 255, 255))
                elif event.key == pygame.K_w:
                    # White
                    drawColor = (255, 255, 255)
                elif event.key == pygame.K_k:
                    # Black
                    drawColor = (0, 0, 0)
                elif event.key == pygame.K_r:
                    # Red
                    drawColor = (255, 0, 0)
                elif event.key == pygame.K_g:
                    # Green
                    drawColor = (0, 255, 0)
                elif event.key == pygame.K_b:
                    # Blue
                    drawColor = (0, 0, 255)
                elif event.key in [pygame.K_1, pygame.K_2, pygame.K_3, pygame.K_4, pygame.K_5,
                                   pygame.K_6, pygame.K_7, pygame.K_8, pygame.K_9]:
                    # Set line width from 1 to 9 pixels
                    try:
                        lineWidth = int(pygame.key.name(event.key))
                    except ValueError:
                        pass

                elif event.key == pygame.K_s:
                    # Save the current picture as painting.bmp
                    try:
                        pygame.image.save(screen, "painting.bmp")
                    except pygame.error:
                        print("Error saving the file: painting.bmp")
                elif event.key == pygame.K_l:
                    # Load and display the painting.bmp file
                    try:
                        loaded_image = pygame.image.load("painting.bmp")
                        background.blit(loaded_image, (0, 0))
                    except pygame.error:
                      print("Error loading the file: painting.bmp")
                    # R - Refresh display
                    screen.blit(background, (0, 0))
                    myLabel = statusSurface(drawColor, lineWidth)
                    screen.blit(myLabel, (450, 450))
                    pygame.display.flip()

# Close the game window
pygame.quit()
main()
